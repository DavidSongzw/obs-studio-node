trigger:
  branches:
    include:
      - staging
  tags:
    include:
      - '*'

variables:
  RuntimeURL: https://atom.io/download/atom-shell
  RuntimeName: iojs
  ElectronVersion: 9.3.3
  SLBuildDirectory: streamlabs-build
  SLGenerator: Visual Studio 16 2019
  SLDistributeDirectory: distribute
  SLFullDistributePath: $(SLBuildDirectory)\$(SLDistributeDirectory)
  LibOBSVersion: 26.1.11

jobs:
- job: 'WindowsRelease32'
  # pool: 'Default'
  pool: 
    vmImage: 'windows-2019'
  workspace:
    clean: all
  variables:
    ReleaseName: release
  steps:
  - powershell: |
      Write-Host "##vso[task.setvariable variable=tagartifact]osn-$((git.exe describe --tags --abbrev=0) | Out-String)"
      'yarn install'
    displayName: 'Install dependencies'

  - script: 'yarn add electron@%ElectronVersion% -D --arch=ia32'
    displayName: 'Install Electron'

  - script: 'git submodule update --init --recursive'
    displayName: 'Update submodules'

  - script: ./ci-32/configure-osn.cmd
    displayName: 'Configure obs-studio-node'

  - script: 'node ci-32/bump-version.js'
    displayName: 'Bump version number'
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))

  - script: ./ci-32/build-osn.cmd
    displayName: 'Build obs-studio-node'

  # - script: 'yarn run test'
  #   env:
  #     SLOBS_BE_STREAMKEY: $(testsStreamKey)
  #     SLOBS_TEST_USER_POOL_TOKEN: $(userPoolToken)
  #     OSN_ACCESS_KEY_ID: $(awsAccessKeyId)
  #     OSN_SECRET_ACCESS_KEY: $(awsSecretAccessKey)
  #     RELEASE_NAME: $(ReleaseName)
  #   displayName: 'Run tests'

  - script: ./ci-32/copy-files.cmd
    displayName: 'Copy necessary dll files'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: $(SLFullDistributePath)\obs-studio-node
      includeRootFolder: true
      archiveType: tar
      tarCompression: gz
      archiveFile: '$(SLFullDistributePath)\$(tagartifact)-release-win32.tar.gz'
    displayName: 'Generate build artifact'

  - task: PublishBuildArtifacts@1
    inputs: 
      pathtoPublish: $(SLFullDistributePath)\$(tagartifact)-release-win32.tar.gz
      artifactName: $(tagartifact)-release-win32.tar.gz
    displayName: 'Publish build artifact'

  - script: ./ci-32/prepare-artifact.cmd
    displayName: 'Prepare tag artifact'
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: $(SLFullDistributePath)\obs-studio-node
      includeRootFolder: true
      archiveType: tar
      tarCompression: gz
      archiveFile: '$(tagartifact)-release-win32.tar.gz'
    displayName: 'Generate tag artifact'
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))

  # Download an artifact named 'WebApp' to 'bin' in $(Build.SourcesDirectory)
  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: '$(tagartifact)-release-win32.tar.gz'
      path: $(Build.SourcesDirectory)/bin


  - task: DownloadGitHubRelease@0
    inputs:
      connection: 'DavidSongzw'
      userRepository: 'https://github.com/DavidSongzw/obs-studio-node'
      #defaultVersionType: 'latest' # Options: latest, specificVersion, specificTag
      #version: # Required when defaultVersionType != Latest
      #itemPattern: '**' # Optional
      #downloadPath: '$(System.ArtifactsDirectory)'

  - task: PublishBuildArtifacts@1
    inputs: 
      pathtoPublish: $(Build.SourcesDirectory)\$(tagartifact)-release-win32.tar.gz
      artifactName: '$(tagartifact)-release-win32.tar.gz'
    displayName: 'Publish tag artifact'
    condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))
